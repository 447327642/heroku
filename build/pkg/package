#!/usr/bin/env ruby

project_root = ARGV.shift
package_file = ARGV.shift

unless project_root && package_file
  puts "usage: deb/package PROJECT_ROOT PACKAGE_FILE"
  exit 1
end

require "erb"
require "fileutils"
require "tmpdir"

resources = File.expand_path("../resources", __FILE__)
version = package_file.match(/heroku-([a-z0-9\.]+)\./)[1]

unless File.exists?("pkg/heroku-#{version}.tgz")
  puts "must package tgz first"
  exit 1
end

Dir.mktmpdir do |dir|
  Dir.chdir(dir) do
    system %{ tar -xzvf #{project_root}/pkg/heroku-#{version}.tgz }

    system %{ mkdir -p heroku-client/bin }
    system %{ rm heroku-client/heroku }

    File.open("heroku-client/bin/heroku", "w") do |file|
      file.puts <<-END
#!/usr/bin/env ruby

gem_dir = File.expand_path("../../vendor/gems", __FILE__)
Dir["\#{gem_dir}/**/lib"].each do |libdir|
$:.unshift libdir
end

$:.unshift File.expand_path("../../lib", __FILE__)

require 'heroku'
require 'heroku/command'

args = ARGV.dup
ARGV.clear
command = args.shift.strip rescue 'help'

Heroku::Command.load
Heroku::Command.run(command, args)
      END
    end
    system %{ chmod +x heroku-client/bin/heroku }

    kbytes = %x{ du -ks heroku-client | cut -f 1 }
    num_files = %x{ find heroku-client | wc -l }

    FileUtils.mkdir_p "pkg"
    FileUtils.mkdir_p "pkg/Resources"
    FileUtils.mkdir_p "pkg/heroku-#{version}.pkg"

    dist = File.read("#{resources}/Distribution.erb")
    dist = ERB.new(dist).result(binding)
    File.open("pkg/Distribution", "w") { |f| f.puts dist }

    dist = File.read("#{resources}/PackageInfo.erb")
    dist = ERB.new(dist).result(binding)
    File.open("pkg/heroku-#{version}.pkg/PackageInfo", "w") { |f| f.puts dist }

    FileUtils.mkdir_p "pkg/heroku-#{version}.pkg/Scripts"
    File.open("pkg/heroku-#{version}.pkg/Scripts/postinstall", "w") do |file|
      file.puts <<-END
#!/bin/sh
ln -sf /usr/local/heroku/bin/heroku /usr/bin/heroku
      END
    end
    system %{ chmod +x pkg/heroku-#{version}.pkg/Scripts/postinstall }

    system %{ mkbom -s heroku-client pkg/heroku-#{version}.pkg/Bom }

    Dir.chdir("heroku-client") do
      system %{ pax -wz -x cpio . > ../pkg/heroku-#{version}.pkg/Payload }
    end

    system %{ pkgutil --flatten pkg heroku-#{version}.pkg }

    FileUtils.cp_r "heroku-#{version}.pkg", "#{project_root}/#{package_file}"
  end
end
