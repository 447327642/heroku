#!/usr/bin/env ruby

project_root = ARGV.shift
package_file = ARGV.shift

unless project_root && package_file
  puts "usage: gem/package PROJECT_ROOT PACKAGE_FILE"
  exit 1
end

version = package_file.match(/heroku-([a-z0-9\.]+)\./)[1]
resources = File.expand_path("..\\resources", __FILE__).gsub('/', '\\')

INNO_DIR = ENV["INNO_DIR"] || 'C:\\Program Files (x86)\\Inno Setup 5\\'

require "tmpdir"

unless File.exists?("pkg/heroku-#{version}.tgz")
  puts "must package tgz first"
  exit 1
end

Dir.mktmpdir do |dir|
  system "tar -xzvf pkg/heroku-#{version}.tgz -C #{dir} --strip-components 1"

  File.open("#{dir}/heroku.bat", "w") do |file|
    file.puts <<-END
@ECHO OFF
IF NOT "%~f0" == "~f0" GOTO :WinNT
@"%HerokuPath%\\ruby\\bin\\ruby.exe" "heroku" %1 %2 %3 %4 %5 %6 %7 %8 %9
GOTO :EOF
:WinNT
@"%HerokuPath%\\ruby\\bin\\ruby.exe" "%~dpn0" %*
    END
  end

  original_project_root = project_root
  project_root = dir

  require "erb"
  require "tempfile"

  iss = Tempfile.new("heroku.iss")
  iss.write(ERB.new(File.read("#{resources}/heroku.iss")).result(binding))
  iss.close

  system "curl http://heroku-toolbelt.s3.amazonaws.com/rubyinstaller.exe -o #{project_root}\\data\\rubyinstaller.exe"
  system "curl http://heroku-toolbelt.s3.amazonaws.com/git.exe -o #{project_root}\\data\\git.exe"

  system "\"#{INNO_DIR}\\Compil32.exe\" /cc \"#{iss.path}\""
end
